Diseño
1-Primero sugiere dibujar un diagrama, pero no se como se relacionan
2-Dice de hacer interfaz de repository  Provincia findById(Long id); (no lo hice)
3-Implementacion repository Es decir, el nombre de la implementación del Repository tendrá la palabra "Dummy" para
identificar esta implementación "rápida" de la real.
4- El servicio buscarPorId está recibiendo un Long como parámetro. ¿Se te ocurre alguna optimización para la
 firma de este método?

TDD
Construcción de un Service dummy
Crear ProvinciaServiceImplTest

Así, en el test, deberemos invocar al método correspondiente del Service con un id existente, y realizar un assert
para verificar que la provincia devuelta no sea null, y contenga el id buscado... y el test fallará porque
no existe la clase!

Crear dominio y servicio, me pide crear clase repository

Test funciona ok

Pagina: Construccion clase negocio

Vamos a mejorar el Service para desacoplar el acceso a datos. Para esto, moveremos la "lógica dummy" de
obtener la Provincia a una clase Repository.

Donde me quede?
Sacando autowired en el test (testbasico)
Saque logica copiada jpa en repository, me quede trabado






















Controller
-Rest
        Tiene algo parecido a la clase, pero es /api
        Aca se busca por id y revisa si es nulo el parametro o el retorno
        ! no entiendo porque estan separados o su uso
-Clases
        /**
         * Este es un controlador de presentación (que se define anotándolo con
         * @Controller). Se encarga de atender peticiones HTTP y devolver una vista para
         * que muestre HTML al cliente.
         *
         * La anotación @RequestMapping en un método indica que ese método se invoca
         * cuando se recibe una petición HTTP con esa dirección. El método en cuestión
         * devuelve un Sring, que representa la vista (página HTML).
         */
Domain
        /**
         * Este objeto de dominio utiliza anotaciones para relacionar la clase y sus
         * atributos con una tabla. JPA (a través de Hibernate) utiliza estas anotaciones
         * para acceder a la base de datos e interactuar con objetos de esta clase.
         */
        @Entity
        Los nombres tienen que ser igual a los definidos en schema para ser tomados, me paso de poner unos propios
        y daba error de tabla

Exception
        /**
         * Excepción lanzada en caso de no encontrar el pais buscado.
         *
         * Por medio de la anotación @ResponseStatus indicamos que, en caso de que esta
         * excepción sea lanzada, se le asociará el código de error NOT_FOUND (404). De
         * esta forma el cliente verá dicho error.
         *
         */
         por ahora no entiendo muy bien las excepciones, cuando se disparen por api quizas la vea porque con consola
         no las encontre en TEST

Repository
        /** Este es una interfaz de acceso a datos, que utiliza Spring Data para
         * implementar el repositorio.
         * Contiene varios métodos heredados, que permiten buscar Paises por distintos
         * criterios, guardar un pais, borrarlo, etc.
         */
         copie y pegue lo de pais, no se que hace o los usos que tiene
Service
        /** Esta es la interfaz (contrato) de un componente de la capa de lógica de negocio.
         * Contiene las operaciones que la capa de lógica de negocio expone para operar
         * con instancias de Pais.
         */
         estan las interfaces pero no encuentro la funcionalidad donde està, ES LO QUE ESTA EN REST??


!!!anotar como identar, como arreglar los imports


Es decir, Spring es un factory de objetos que inyecta dependencias.

Estos objetos en Spring se conocen como "beans". Una clase se define como bean al agregarle alguna de estas
anotaciones: @Component, @Controller, @RestController, @Service, @Repository. Además, allí mismo se declaran las
propiedades del objeto que tienen dependencias a otros beans marcandolas con la anotación @Autowired.


!!inyeccion de dependencias, poner estereotipo (service, domain. etc) , y autowied, sirve para no instanciar el objeto
en cada capa
https://www.youtube.com/watch?v=sLY9umEahso&ab_channel=MitoCode





Cosas que no entendi

Construcción de un Service dummy
ProvinciaRepository provinciaRepository = new ProvinciaRepositoryImpl();
Conclusion, problema de esto?
